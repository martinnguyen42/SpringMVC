package com.myclass.admin.controller;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import com.myclass.entity.Role;
import com.myclass.service.RoleService;

/**
 * M·ª•c ƒë√≠ch: L·ªõp qu·∫£n l√Ω quy·ª?n ng∆∞·ª?i d√πng Ng∆∞·ª?i t·∫°o: Nguy·ªÖn Ti·∫øn Ho√†ng Ng√†y t·∫°o:
 * 24/08/2019 Version: 01
 */

@Controller
@RequestMapping("admin/role")
public class RoleController {

	@Autowired
	@Qualifier("roleServiceImpl")
	RoleService roleService;

//	@Autowired
//	RoleRepository roleRepository = null;

//	@Autowired
//	public RoleController(RoleRepository roleRepository) {
//		this.roleRepository = roleRepository;
//
//	}

	/**
	 * M·ª•c ƒë√≠ch: Ph∆∞∆°ng th·ª©c l·∫•y danh s√°ch quy·ª?n Ng∆∞·ª?i t·∫°o: Nguy·ªÖn Ti·∫øn Ho√†ng Ng√†y
	 * t·∫°o: 24/08/2019 Version: 01
	 */
	@GetMapping("")
	public String index(Model model) {
		model.addAttribute("roles", roleService.findAll());
		return "role/index";
	}

	/**
	 * M·ª•c ƒë√≠ch: Hi·ªÉn th·ªã trang th√™m m·ªõi Ng∆∞·ª?i t·∫°o: Nguy·ªÖn Ti·∫øn Ho√†ng Ng√†y t·∫°o:
	 * 24/08/2019 Version: 01
	 */
	@GetMapping("add")
	public String add(Model model) {
		model.addAttribute("role", new Role());
		return "role/add";
	}

	/**
	 * M·ª•c ƒë√≠ch: Th√™m m·ªõi quy·ª?n v√†o danh s√°ch Ng∆∞·ª?i t·∫°o: Nguy·ªÖn Ti·∫øn Ho√†ng Ng√†y t·∫°o:
	 * 24/08/2019 Version: 01
	 */
	@PostMapping("add")
	public String add(Model model, @Valid @ModelAttribute("role") Role role, BindingResult errors) {
		// Ki·ªÉm tra nh·∫≠p li·ªáu
		if (errors.hasErrors()) {
			return "role/add";
		}

		// Th√™m m·ªõi role v√† danh s√°ch
		roleService.add(role);
		// Chuy·ªÉn h∆∞·ªõng v·ª? trang danh s√°ch
		return "redirect:/admin/role";
	}

	/**
	 * M·ª•c ƒë√≠ch: Hi·ªÉn th·ªã trang c·∫≠p nh·∫≠t th√¥ng tin quy·ª?n c·ªßa user Ng∆∞·ª?i t·∫°o: Nguy·ªÖn
	 * Ti·∫øn Ho√†ng Ng√†y t·∫°o: 24/08/2019 Version: 01
	 */
	// edit?name=Hoang => tr∆∞·ª?ng h·ª£p d·∫•u h·ª?i th√¨ @RequestParam

	@GetMapping("edit/{id}")
	public String edit(@PathVariable("id") String id, Model model) {
		for (Role role : roleService.findAll()) {
			if (role.getId().equals(id)) {
				model.addAttribute("role", role);
				break;
			}
		}
		return "role/edit";
	}

	/**
	 * M·ª•c ƒë√≠ch: C·∫≠p nh·∫≠t th√¥ng tin quy·ª?n trong danh s√°ch d·ª±a theo id Ng∆∞·ª?i t·∫°o:
	 * Nguy·ªÖn Ti·∫øn Ho√†ng Ng√†y t·∫°o: 24/08/2019 Version: 01
	 */
	@PostMapping("edit")
	public String edit(Model model, @Valid @ModelAttribute("role") Role role, BindingResult errors) {
		// B·∫Øt l·ªói nh·∫≠p li·ªáu
		if (errors.hasErrors()) {
			return "role/edit";
		}

		// C·∫≠p nh·∫≠t role
		roleService.update(role);
		// Chuy·ªÉn h∆∞·ªõng v·ª? trang danh s√°ch
		return "redirect:/admin/role";
	}

	/**
	 * M·ª•c ƒë√≠ch: X√≥a quy·ª?n t·ª´ danh s√°ch d·ª±a theo id Ng∆∞·ª?i t·∫°o: Nguy·ªÖn Ti·∫øn Ho√†ng
	 * Ng√†y t·∫°o: 24/08/2019 Version: 01
	 */
	@GetMapping("delete/{id}")
	public String delete(@PathVariable("id") String id) {
		// X√≥a role theo id
		roleService.removeById(id);

		// Chuy·ªÉn h∆∞·ªõng v·ª? trang danh s√°ch
		return "redirect:/admin/role";
	}
}
